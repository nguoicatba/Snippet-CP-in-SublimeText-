<snippet>
	<content><![CDATA[
#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define rep(i, n) for(int i = 0; i < (int)(n); i ++)
#define rep1(i, n) for(int i = 1; i <= (int)(n); i ++)
#define replr(i,l,r) for (int i=l;i<=(int)(r); i++)
#define rev(i,r,l)  for (int i=r;i>=l;--i)
typedef vector<int> vi;
typedef vector<long long> vll;
typedef map<int,int> mapii;
#define pb push_back 
#define all(x) x.begin(),x.end()
#define maxn
#define endl "\n"
#define NO cout<<"NO"<<endl
#define YES cout<<"YES"<<endl
#define fi first
#define se second
#define writefile(f) freopen (f,"r",stdin)
#define readfile(f)  freopen(f,"w",stdout)
mt19937_64 rng(chrono::high_resolution_clock::now().time_since_epoch().count());
ll randRange (ll L, ll R) {
    return uniform_int_distribution<long long>(L, R)(rng);
}
string test="input0";
void set_test(string s) {
   s+=".inp";
   ofstream fout;
   fout.open(s);

  
   fout.close();  
}

int main ()
{ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(0);
   
   
   replr(i,0,9){
      char c=(char) '0'+i;
      string b=test;
      b+=c;
      set_test(b);
   }

   
}






]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>make_test_olp</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
