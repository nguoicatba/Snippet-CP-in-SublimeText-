<snippet>
	<content><![CDATA[
struct hash_BIT
{  
	vector<long long> p, hash;
	long long MOD;
	int n;
	long long base;

	hash_BIT(int n) :hash(n+1,0), p(n+1,0){
		MOD=1e9+21;
		this->n=n;
		p[0]=1;
		base=31;
		for (int i=1;i<=n;++i)
			p[i]= (p[i-1]*base) % MOD;
	}
    
	long long pre(int k){ 
      long long ans=0;
      for (int j = k ; j > 0; j-= j & -j){
          ans = (ans + hash[j] * p[k-j]) %MOD;
      }
      return ans;

	}

	long long get_hash(int l, int r){
		return (pre(r) -pre(l-1)*p[r-l+1] + 1ll * MOD * MOD)%MOD;
	}

	void update (int k, char c) {
        long long delta = c - 'a' + 1 - get_hash(k, k);
        for (int j = k; j < hash.size(); j += j & -j)
            hash[j] = (hash[j] + delta * p[j - k] + MOD * MOD) % MOD;
        
    }


	
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>hash_BIT</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
